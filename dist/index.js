import c from"axios";import m from"fs";import h from"path";import f from"mime-types";var p=class{constructor(){}encodedBaseUrl(t,n){let r="https://api.instagram.com/graphql/query/",o=["8845758582119845","10068642573147916"],i=[{shortcode:n,fetch_tagged_user_count:null,hoisted_comment_id:null,hoisted_reply_id:null},{id:n,render_surface:"PROFILE"}];return encodeURI(`${r}?doc_id=${o[t]}&variables=${JSON.stringify(i[t])}`)}getUsername(t){try{let n=new URL(t),r=n.pathname.split("/").filter(Boolean);if(n.hostname.endsWith("instagram.com")&&r.length===1&&!["p","reel","reels","tv"].includes(r[0]))return r[0]}catch{}return null}getShortcode(t){try{let n=new URL(t),r=n.pathname.split("/").filter(Boolean);if(n.hostname.endsWith("instagram.com")&&r.length===2&&["p","reel","reels","tv"].includes(r[0]))return r[1]}catch{}return null}async getProfileId(t){if(typeof t!="string")throw new Error("Username is required");let r=`https://www.instagram.com/${this.getUsername(t)||(/^[a-zA-Z0-9._]+$/.test(t)?t:null)}`;try{let o=await c.get(r);if(o.status===200)return o.data.match(/"profilePage_([0-9]+)"/)[1]||null}catch{throw new Error("Profile not found")}return null}async getMediaURL(t){if(typeof t!="string")throw new Error("Media URL is required");let n=this.getShortcode(t);if(n){let r=this.encodedBaseUrl(0,n);try{let o=await c.get(r);if(o.status===200)switch(o.data.data.xdt_shortcode_media.__typename){case"XDTGraphSidecar":return o.data.data.xdt_shortcode_media.edge_sidecar_to_children.edges.map(a=>a.node.__typename==="XDTGraphVideo"?a.node.video_url:a.node.__typename==="XDTGraphImage"?a.node.display_url:null).filter(Boolean);case"XDTGraphVideo":return Array(o.data.data.xdt_shortcode_media.video_url);case"XDTGraphImage":return Array(o.data.data.xdt_shortcode_media.display_url)}}catch{throw new Error("Something went wrong! Check if the media URL is valid.")}}throw new Error("Invalid media URL!")}async getProfileInfo(t){if(typeof t!="string")throw new Error("Profile URL is required");let n=this.getUsername(t)||(/^[a-zA-Z0-9._]+$/.test(t)?t:null),r=await this.getProfileId(n);if(r){let o=this.encodedBaseUrl(1,r);try{let i=await c.get(o);if(i.status===200){let e=i.data.data.user;return{is_private:e.is_private,is_verified:e.is_verified,full_name:e.full_name,profile_pic:e.hd_profile_pic_url_info.url,username:e.username,bio:e.biography,external_url:e.external_url,follower_count:e.follower_count,following_count:e.following_count,media_count:e.media_count,user_id:e.id}}}catch{throw new Error("Something went wrong!")}}throw new Error("Invalid profile URL!")}async getMediaInfo(t,n=!1){if(typeof t!="string")throw new Error("Media URL is required");let r=this.getShortcode(t);if(r){let o=this.encodedBaseUrl(0,r);try{let i=await c.get(o);if(i.status===200){let e=i.data.data.xdt_shortcode_media,d=n?[...e.edge_media_to_parent_comment.edges.map(s=>({owner:s.node.owner.username,text:s.node.text,profile_pic:s.node.owner.profile_pic_url})),...e.edge_media_preview_comment.edges.map(s=>({owner:s.node.owner.username,text:s.node.text,profile_pic:s.node.owner.profile_pic_url}))].filter((s,u,_)=>u===_.findIndex(l=>l.owner===s.owner&&l.text===s.text)):[];return{id:e.id,shortcode:e.shortcode,type:e.__typename,published_at:e.taken_at_timestamp,is_video:e.is_video,has_audio:!!e.has_audio,comments_count:e.edge_media_preview_comment.count,likes_count:e.edge_media_preview_like.count,caption:e.edge_media_to_caption.edges[0].node.text,accessibility_caption:e.accessibility_caption,dimensions:e.dimensions,owner:e.owner.username,owner_name:e.owner.full_name,owner_id:e.owner.id,tagged_users:e.edge_media_to_tagged_user.edges.map(s=>s.node.user.username),owner_profile_pic:e.owner.profile_pic_url,display_url:e.display_url,location:e.location?e.location.name:null,is_paid_partnership:e.is_paid_partnership,is_ad:e.is_ad,sponsors:e.edge_media_to_sponsor_user.edges.map(s=>s.node.sponsor.username),video_url:e.is_video?e.video_url:null,video_play_count:e.is_video?e.video_play_count:null,video_duration:e.is_video?e.video_duration:null,comments:d}}}catch(i){throw console.log(i),new Error("Something went wrong! Check if the media URL is valid.")}}throw new Error("Invalid media URL!")}async downloadMedia(t,n="media"){if(typeof t!="string")throw new Error("Media URL is required");let r=this.getShortcode(t);if(r){let o=await this.getMediaURL(t);if(o){let i=h.join(n,r);m.existsSync(i)||m.mkdirSync(i,{recursive:!0});for(let e=0;e<o.length;e++){let d=o[e];try{let a=await c({method:"GET",url:d,responseType:"stream"}),s=a.headers["content-type"],u=f.extension(s)||"bin",_=h.join(i,`${e+1}.${u}`),l=m.createWriteStream(_);a.data.pipe(l),l.on("finish",()=>{console.log(`\u2705 Media ${e+1} has been downloaded to ${_}`)}),l.on("error",g=>{console.error("\u274C Error writing file:",g.message)})}catch(a){console.error(`Failed to download ${d}:`,a)}}}}else throw new Error("Invalid media URL!")}};export{p as ReelRipper};
